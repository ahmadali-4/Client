{"version":3,"file":"static/js/458.551d5450.chunk.js","mappings":"2RAce,SAASA,IAGtB,IAAMC,EAAsBC,EAAAA,KAAaC,MAAM,CAC7CC,MAAOF,EAAAA,KACJG,SAAS,qBACTD,MAAM,yCAGLE,GAAUC,EAAAA,EAAAA,IAAQ,CACtBC,UAAUC,EAAAA,EAAAA,GAAYR,GACtBS,cAAe,CAAEN,MAAO,sBAGlBO,EAAiBL,EAAjBK,aAEFC,EAAQ,yCAAG,WAAOC,GAAP,sEACf,IAEEC,SAASC,eAAeF,GAGzB,CAFC,MAAOG,GACPC,QAAQD,MAAMA,EACf,CANc,2CAAH,sDASd,OACE,UAAC,KAAD,CAAcV,QAASA,EAASM,SAAUD,EAAaC,GAAvD,WACE,SAAC,KAAD,CAAcM,KAAK,QAAQC,MAAM,mBAEjC,SAACC,EAAA,EAAD,CAEEC,WAAS,EACTC,KAAK,QACLC,KAAK,SACLC,QAAQ,YACRC,GAAI,CACFC,GAAI,EACJC,QAAS,eACTC,MAAO,SAACC,GAAD,MACkB,UAAvBA,EAAMC,QAAQC,KAAmB,eAAiB,UAD7C,EAEP,UAAW,CACTJ,QAAS,eACTC,MAAO,SAACC,GAAD,MACkB,UAAvBA,EAAMC,QAAQC,KAAmB,eAAiB,UAD7C,IAbb,4BAsBL,CC3DD,IAoCA,EApCsB,WACpB,OACE,iCACE,UAACC,EAAA,EAAD,CAAOC,QAAS,EAAGR,GAAI,CAAEC,GAAI,EAAGQ,GAAI,EAAGC,SAAU,YAAjD,WACE,SAACC,EAAA,EAAD,CAAYZ,QAAQ,KAAKa,WAAS,EAAlC,oCAIA,SAACD,EAAA,EAAD,CAAYX,GAAI,CAAEG,MAAO,iBAAkBM,GAAI,GAA/C,kIAOF,SAAClC,EAAD,KAEA,UAACsC,EAAA,EAAD,CACEC,UAAWC,EAAAA,GACXC,GAAI,cACJb,MAAM,UACNJ,QAAQ,YACRC,GAAI,CACFC,GAAI,EACJgB,GAAI,OACJC,WAAY,SACZC,QAAS,eATb,WAYE,SAAC,IAAD,CAAWtB,KAAM,KAZnB,yBAiBL,C","sources":["sections/Auth/ResetPasswordForm.js","pages/auth/ResetPassword.js"],"sourcesContent":["import React from \"react\";\r\nimport * as Yup from \"yup\";\r\n// form\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\n// components\r\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { ForgotPassword } from \"../../redux/slices/auth\";\r\n// import { LoadingButton } from \"@mui/lab\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthResetPasswordForm() {\r\n  //   const { isLoading } = useSelector((state) => state.auth);\r\n  //   const dispatch = useDispatch();\r\n  const ResetPasswordSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email must be a valid email address\"),\r\n  });\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(ResetPasswordSchema),\r\n    defaultValues: { email: \"demo@chatHub.com\" },\r\n  });\r\n\r\n  const { handleSubmit } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      //   Send API Request\r\n      dispatch(ForgotPassword(data));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n      <LoadingButton\r\n        // loading={isLoading}\r\n        fullWidth\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        sx={{\r\n          mt: 3,\r\n          bgcolor: \"text.primary\",\r\n          color: (theme) =>\r\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          \"&:hover\": {\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          },\r\n        }}\r\n      >\r\n        Send Request\r\n      </LoadingButton>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { Stack, Typography, Link } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { CaretLeft } from \"phosphor-react\";\r\nimport AuthResetPasswordForm from \"../../sections/Auth/ResetPasswordForm\";\r\n\r\nconst ResetPassword = () => {\r\n  return (\r\n    <>\r\n      <Stack spacing={2} sx={{ mt: 5, mb: 5, position: \"relative\" }}>\r\n        <Typography variant=\"h3\" paragraph>\r\n          Forgot your password?\r\n        </Typography>\r\n\r\n        <Typography sx={{ color: \"text.secondary\", mb: 5 }}>\r\n          Please enter the email address associated with your account and We\r\n          will email you a link to reset your password.\r\n        </Typography>\r\n      </Stack>\r\n\r\n      {/* Reset Password Form */}\r\n      <AuthResetPasswordForm />\r\n\r\n      <Link\r\n        component={RouterLink}\r\n        to={\"/auth/login\"}\r\n        color=\"inherit\"\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          mt: 3,\r\n          mx: \"auto\",\r\n          alignItems: \"center\",\r\n          display: \"inline-flex\",\r\n        }}\r\n      >\r\n        <CaretLeft size={24} />\r\n        Return to sign in\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":["AuthResetPasswordForm","ResetPasswordSchema","Yup","shape","email","required","methods","useForm","resolver","yupResolver","defaultValues","handleSubmit","onSubmit","data","dispatch","ForgotPassword","error","console","name","label","LoadingButton","fullWidth","size","type","variant","sx","mt","bgcolor","color","theme","palette","mode","Stack","spacing","mb","position","Typography","paragraph","Link","component","RouterLink","to","mx","alignItems","display"],"sourceRoot":""}